Network: nn.Sequential {
  [input -> (1) -> (2) -> output]
  (1): nn.Parallel {
    input
       `-> (1): nn.Sequential {
             [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> output]
             (1): nn.Linear(4 -> 50)
             (2): nn.Sigmoid
             (3): nn.Linear(50 -> 50)
             (4): nn.Sigmoid
             (5): nn.Linear(50 -> 1)
             (6): nn.Sigmoid
           }
       ... -> output
  }
  (2): nn.Linear(1 -> 1)
}Criterion: nn.MSECriterion
LearningRate: 0.001 Annealling Rate: 0.95
Run = 1 Training set Percent error: %98.586512567638 Test Set Percent error: %103.744286367
Run = 2 Training set Percent error: %85.549999635128 Test Set Percent error: %91.81330884362
Run = 3 Training set Percent error: %74.016773889098 Test Set Percent error: %81.788746296485
Run = 4 Training set Percent error: %67.240305034229 Test Set Percent error: %76.629722641253
Run = 5 Training set Percent error: %72.369436180001 Test Set Percent error: %83.800103947253
Run = 6 Training set Percent error: %76.108756197316 Test Set Percent error: %89.212047449278
Run = 7 Training set Percent error: %78.651499706551 Test Set Percent error: %92.974805951436
Run = 8 Training set Percent error: %80.39752861456 Test Set Percent error: %95.582784647266
Run = 9 Training set Percent error: %81.617174657312 Test Set Percent error: %97.396625912528
Run = 10 Training set Percent error: %82.46820544851 Test Set Percent error: %98.667283771677
