Network: nn.Sequential {
  [input -> (1) -> (2) -> output]
  (1): nn.Parallel {
    input
       `-> (1): nn.Sequential {
             [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> output]
             (1): nn.Linear(40 -> 50)
             (2): nn.Sigmoid
             (3): nn.Linear(50 -> 50)
             (4): nn.Sigmoid
             (5): nn.Linear(50 -> 50)
             (6): nn.Sigmoid
             (7): nn.Linear(50 -> 50)
             (8): nn.Sigmoid
             (9): nn.Linear(50 -> 1)
             (10): nn.Sigmoid
           }
       ... -> output
  }
  (2): nn.Linear(1 -> 1)
}Criterion: nn.MSECriterion
LearningRate: 0.01 Annealling Rate: 0.6
Run = 1 Training set Percent error: %3.1024891149293 Test Set Percent error: %2.8480555521578
Run = 2 Training set Percent error: %1.9775467627579 Test Set Percent error: %1.7232208392474
Run = 3 Training set Percent error: %1.7241867207664 Test Set Percent error: %1.4948575087562
Run = 4 Training set Percent error: %1.5826882882172 Test Set Percent error: %1.3689598954044
Run = 5 Training set Percent error: %1.4862294063619 Test Set Percent error: %1.2810527261924
Run = 6 Training set Percent error: %1.4253014150583 Test Set Percent error: %1.2252678015497
Run = 7 Training set Percent error: %1.3884009230028 Test Set Percent error: %1.191355050881
Run = 8 Training set Percent error: %1.3664022178263 Test Set Percent error: %1.1710261923515
Run = 9 Training set Percent error: %1.3533000480469 Test Set Percent error: %1.1588735818141
Run = 10 Training set Percent error: %1.3454678523422 Test Set Percent error: %1.1516060598858
